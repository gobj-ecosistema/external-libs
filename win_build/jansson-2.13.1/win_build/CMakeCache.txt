# This is the CMakeCache file.
# For build in directory: c:/yuneta/development/yuneta/^gobj-ecosistema/external-libs/build/jansson-2.13.1/build
# It was generated by CMake: C:/Program Files/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/lib.exe

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/jansson

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=CMAKE_MT-NOTFOUND

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=jansson

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:X86

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Build documentation (uses python-sphinx).
JANSSON_BUILD_DOCS:BOOL=ON

//Build shared libraries.
JANSSON_BUILD_SHARED_LIBS:BOOL=OFF

//Compile example applications
JANSSON_EXAMPLES:BOOL=ON

//Jansson include directories
JANSSON_INCLUDE_DIRS:PATH=C:/yuneta/development/yuneta/^gobj-ecosistema/external-libs/build/jansson-2.13.1/include;C:/yuneta/development/yuneta/^gobj-ecosistema/external-libs/build/jansson-2.13.1/build/include

//Number of buckets new object hashtables contain is 2 raised to
// this power. The default is 3, so empty hashtables contain 2^3
// = 8 buckets.
JANSSON_INITIAL_HASHTABLE_ORDER:STRING=3

//Generate installation target
JANSSON_INSTALL:BOOL=ON

//Installation directory for executables
JANSSON_INSTALL_BIN_DIR:PATH=bin

//Installation directory for CMake files
JANSSON_INSTALL_CMAKE_DIR:PATH=cmake

//Installation directory for header files
JANSSON_INSTALL_INCLUDE_DIR:PATH=include

//Installation directory for libraries
JANSSON_INSTALL_LIB_DIR:PATH=lib

//jansson libraries
JANSSON_LIBRARIES:STRING=jansson

//Link the static CRT libraries
JANSSON_STATIC_CRT:BOOL=OFF

//Enable valgrind tests.
JANSSON_TEST_WITH_VALGRIND:BOOL=OFF

//Don't build tests ('make test' to execute tests)
JANSSON_WITHOUT_TESTS:BOOL=OFF

//The sphinx-build Python script.
Sphinx-build_EXECUTABLE:FILEPATH=Sphinx-build_EXECUTABLE-NOTFOUND

//Installation prefix of Sphinx (docutils).
Sphinx_DIR:PATH=

//Use /dev/urandom to seed the hash function.
USE_URANDOM:BOOL=ON

//Use CryptGenRandom to seed the hash function.
USE_WINDOWS_CRYPTOAPI:BOOL=ON

//Value Computed by CMake
jansson_BINARY_DIR:STATIC=C:/yuneta/development/yuneta/^gobj-ecosistema/external-libs/build/jansson-2.13.1/build

//Value Computed by CMake
jansson_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
jansson_SOURCE_DIR:STATIC=C:/yuneta/development/yuneta/^gobj-ecosistema/external-libs/build/jansson-2.13.1


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/yuneta/development/yuneta/^gobj-ecosistema/external-libs/build/jansson-2.13.1/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=23
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 15 2017
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2017/Community
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/yuneta/development/yuneta/^gobj-ecosistema/external-libs/build/jansson-2.13.1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/CMake/share/cmake-3.23
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Test HAS_NO_FORMAT_TRUNCATION
HAS_NO_FORMAT_TRUNCATION:INTERNAL=
//Test HAVE_ATOMIC_BUILTINS
HAVE_ATOMIC_BUILTINS:INTERNAL=
//Have function close
HAVE_CLOSE:INTERNAL=1
//Have includes endian.h
HAVE_ENDIAN_H:INTERNAL=
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have function getpid
HAVE_GETPID:INTERNAL=1
//Have function gettimeofday
HAVE_GETTIMEOFDAY:INTERNAL=
//Test HAVE_INLINE
HAVE_INLINE:INTERNAL=1
//Result of TRY_COMPILE
HAVE_INT:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_INT32_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_INT64_T:INTERNAL=TRUE
//Have function localeconv
HAVE_LOCALECONV:INTERNAL=1
//Have include locale.h
HAVE_LOCALE_H:INTERNAL=1
//Result of TRY_COMPILE
HAVE_LONG_INT:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_LONG_LONG_INT:INTERNAL=TRUE
//Have function open
HAVE_OPEN:INTERNAL=1
//Have function read
HAVE_READ:INTERNAL=1
//Have includes sched.h
HAVE_SCHED_H:INTERNAL=
//Have function sched_yield
HAVE_SCHED_YIELD:INTERNAL=
//Have function setlocale
HAVE_SETLOCALE:INTERNAL=1
//Result of TRY_COMPILE
HAVE_SSIZE_T:INTERNAL=FALSE
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have function strtoll
HAVE_STRTOLL:INTERNAL=1
//Have function strtoq
HAVE_STRTOQ:INTERNAL=
//Test HAVE_SYNC_BUILTINS
HAVE_SYNC_BUILTINS:INTERNAL=
//Have includes sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have includes sys/time.h
HAVE_SYS_TIME_H:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Result of TRY_COMPILE
HAVE_UINT16_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_UINT32_T:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_UINT8_T:INTERNAL=TRUE
//Have includes unistd.h
HAVE_UNISTD_H:INTERNAL=
//Result of TRY_COMPILE
HAVE_UNSIGNED_INT:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_UNSIGNED_LONG_INT:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_UNSIGNED_SHORT:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE_UPPERCASE_SSIZE_T:INTERNAL=FALSE
//Have function _strtoi64
HAVE__STRTOI64:INTERNAL=1
//Test HAVE___INLINE
HAVE___INLINE:INTERNAL=1
//Test HAVE___INLINE__
HAVE___INLINE__:INTERNAL=
//Result of TRY_COMPILE
HAVE___INT32:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE___INT64:INTERNAL=TRUE
//Result of TRY_COMPILE
HAVE___UINT16:INTERNAL=FALSE
//Result of TRY_COMPILE
HAVE___UINT32:INTERNAL=FALSE
//Result of TRY_COMPILE
HAVE___UINT8:INTERNAL=FALSE
//CHECK_TYPE_SIZE: sizeof(int)
INT:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(int32_t)
INT32_T:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(int64_t)
INT64_T:INTERNAL=8
//CHECK_TYPE_SIZE: sizeof(long)
LONG_INT:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(long long)
LONG_LONG_INT:INTERNAL=8
//CHECK_TYPE_SIZE: ssize_t unknown
SSIZE_T:INTERNAL=
//ADVANCED property for variable: Sphinx-build_EXECUTABLE
Sphinx-build_EXECUTABLE-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(uint16_t)
UINT16_T:INTERNAL=2
//CHECK_TYPE_SIZE: sizeof(uint32_t)
UINT32_T:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(uint8_t)
UINT8_T:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(unsigned int)
UNSIGNED_INT:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(unsigned long)
UNSIGNED_LONG_INT:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(unsigned short)
UNSIGNED_SHORT:INTERNAL=2
//CHECK_TYPE_SIZE: SSIZE_T unknown
UPPERCASE_SSIZE_T:INTERNAL=
//CHECK_TYPE_SIZE: sizeof(__int32)
__INT32:INTERNAL=4
//CHECK_TYPE_SIZE: sizeof(__int64)
__INT64:INTERNAL=8
//CHECK_TYPE_SIZE: __uint16 unknown
__UINT16:INTERNAL=
//CHECK_TYPE_SIZE: __uint32 unknown
__UINT32:INTERNAL=
//CHECK_TYPE_SIZE: __uint8 unknown
__UINT8:INTERNAL=

